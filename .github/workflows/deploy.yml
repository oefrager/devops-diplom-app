name: push_tag_app

on:
  push:
    tags: 
      - 'v*'
    branches:
      - 'main'

env:
  IMAGE_NAME: oefrager/nginx-app

jobs:
  build-and-push:
    name: Build Docker image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        env:
          VERSION: ${{ steps.meta.outputs.tags }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    name: Deploy to Kubernetes
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Configure Kubernetes CLI
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: create tag
        run:
          echo "NEW_TAG=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV
      - name: Deploy to Cluster
        uses: azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: deployment.yaml
          namespace: application
          images: ${{ env.IMAGE_NAME }}:${{ env.NEW_TAG }}
